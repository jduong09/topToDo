(()=>{const e=e=>{const o=function(e,t,n,o,i){return this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.notes=i,{title:e,dueDate:n}}(e[0].value,e[1].value,e[2].value,e[3].value,e[4].value);n.addTodo(o),t.addNewTodo(o)},t={addNewTodo:e=>{const t=document.getElementById("content"),n=document.createElement("div");n.innerHTML=`${e.title}, ${e.dueDate}`,t.append(n)}};(()=>{const e=document.createElement("div");e.id="content";const t=document.createElement("button");t.innerHTML="+",t.addEventListener("click",(e=>{e.preventDefault()})),e.append(t),document.querySelector("body").appendChild(e)})(),(()=>{const t=document.getElementById("content"),n=document.createElement("form");n.id="form-create-todo";const o=["title","description","due-date","priority","notes"];for(let e=0;e<o.length;e++){const t=o[e],i=document.createElement("label");if(i.setAttribute("for",t),"title"===t||"description"===t){const e=document.createElement("input");i.innerHTML=`${t.slice(0,1).toUpperCase()+t.slice(1)}:`,e.id=t,e.setAttribute("name",t),e.type="text",n.append(i,e)}else if("due-date"===t){i.innerHTML="Due Date:";const e=document.createElement("input");e.id=t,e.setAttribute("name",t),e.type="date",n.append(i,e)}else if("priority"===t){i.innerHTML="Priority:";const e=document.createElement("select");e.setAttribute("name",t);const o=document.createElement("option");o.setAttribute("value","low"),o.innerHTML="Low";const d=document.createElement("option");d.setAttribute("value","medium"),d.innerHTML="Medium";const c=document.createElement("option");c.setAttribute("value","high"),c.innerHTML="High",e.append(o,d,c),n.append(i,e)}else{i.innerHTML="Notes:";const e=document.createElement("textarea");e.id=t,e.setAttribute("name",t),e.setAttribute("rows",5),e.setAttribute("cols",33),e.placeholder="Contact Justin at...",n.append(i,e)}}const i=document.createElement("button");i.id="button-submit",i.type="submit",i.innerHTML="Create Todo",i.addEventListener("click",(t=>{t.preventDefault(),e(n.elements)})),n.appendChild(i),t.append(n)})();const n=function(e){this.name=e;let t=[];return{name:e,addTodo:e=>{t.push(e)},todos:t}}("today")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,